{
  "openapi": "3.0.0",
  "info": {
    "version": "2.1.0",
    "title": "SOCIAL RESTAPI",
    "description": "\"A comprehensive REST API for a social networking service, designed as a <b>Twitter clone</b>. This API supports functionalities including user authentication (login and signup), profile management, and posting messages.\";",
    "license": {
      "name": "MIT",
      "url": "https://spdx.org/licenses/MIT.html"
    },
    "contact": {
      "name": "",
      "url": "https://github.com/xSauron",
      "email": ""
    }
  },
  "servers": [
    {
      "url": "http://localhost:3001/"
    },
    {
      "url": "https://localhost:3001/"
    }
  ],
  "tags": [
    {
      "name": "General",
      "description": ""
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "default": {
            "description": ""
          }
        }
      }
    },
    "/api/avatar/default": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/posts/tags": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get all tags",
        "description": "Endpoint to retrieve all tags used in posts.",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/posts/": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get all posts",
        "description": "Endpoint to retrieve all posts.",
        "parameters": [
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Post"
        ],
        "summary": "Create a post",
        "description": "Endpoint to add a new post.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "caption": {
                    "example": "any"
                  },
                  "files": {
                    "example": "any"
                  },
                  "tags": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/search": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Search posts",
        "description": "Endpoint to search posts based on criteria.",
        "parameters": [
          {
            "name": "caption",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tag",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/posts/{id}": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Get a post",
        "description": "Endpoint to retrieve a post.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/posts/{id}/togglelike": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Toggle like on a post",
        "description": "Endpoint to like or unlike a post.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the post to like or unlike"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/posts/{id}/toggleRetweet": {
      "get": {
        "tags": [
          "Post"
        ],
        "summary": "Toggle retweet on a post",
        "description": "Endpoint to retweet or unretweet a post.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the post to retweet or unretweet"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/posts/{id}/comments": {
      "post": {
        "tags": [
          "Post"
        ],
        "summary": "Add a comment to a post",
        "description": "Endpoint to add a comment to a specific post.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the post to comment on"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/signup": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User signup",
        "description": "Endpoint for user registration.",
        "responses": {
          "201": {
            "description": "User registration successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "token": {
                      "type": "string",
                      "example": "JWT_TOKEN_HERE"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "token": {
                      "type": "string",
                      "example": "JWT_TOKEN_HERE"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Desired username for the new user account",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Desired password for the new user account",
                    "required": true
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "username": "newuser",
                    "password": "newpassword123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "Endpoint for user login.",
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "token": {
                      "type": "string",
                      "example": "JWT_TOKEN_HERE"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "token": {
                      "type": "string",
                      "example": "JWT_TOKEN_HERE"
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing credentials or invalid login details"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "description": "Username of the user",
                    "required": true
                  },
                  "password": {
                    "type": "string",
                    "description": "Password of the user",
                    "required": true
                  }
                },
                "required": [
                  "username",
                  "password"
                ]
              },
              "examples": {
                "example1": {
                  "value": {
                    "username": "newuser",
                    "password": "newpassword123"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/auth/me": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user",
        "description": "Endpoint to get the current logged-in user information.",
        "responses": {
          "200": {
            "description": "List of followed users successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "avatar": {
                          "type": "string",
                          "example": "URL_to_avatar"
                        },
                        "": {
                          "type": "string",
                          "example": "User  "
                        },
                        "email": {
                          "type": "string",
                          "example": "user@example.com"
                        },
                        "_id": {
                          "type": "string",
                          "example": "UserID"
                        },
                        "website": {
                          "type": "string",
                          "example": "http://userwebsite.com"
                        },
                        "bio": {
                          "type": "string",
                          "example": "User biography..."
                        }
                      },
                      "required": [
                        "avatar",
                        "",
                        "email",
                        "_id",
                        "website",
                        "bio"
                      ]
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "avatar": {
                          "type": "string",
                          "example": "URL_to_avatar"
                        },
                        "": {
                          "type": "string",
                          "example": "User  "
                        },
                        "email": {
                          "type": "string",
                          "example": "user@example.com"
                        },
                        "_id": {
                          "type": "string",
                          "example": "UserID"
                        },
                        "website": {
                          "type": "string",
                          "example": "http://userwebsite.com"
                        },
                        "bio": {
                          "type": "string",
                          "example": "User biography..."
                        }
                      },
                      "required": [
                        "avatar",
                        "",
                        "email",
                        "_id",
                        "website",
                        "bio"
                      ]
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Unauthorized. Token missing or invalid."
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get list of followed users",
        "description": "Endpoint to retrieve all followed users.",
        "responses": {
          "200": {
            "description": "List of followed users successfully retrieved.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "user_id"
                          },
                          "name": {
                            "type": "string",
                            "example": "User Name"
                          },
                          "email": {
                            "type": "string",
                            "example": "user@example.com"
                          },
                          "isFollowing": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "example": true
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "_id": {
                            "type": "string",
                            "example": "user_id"
                          },
                          "name": {
                            "type": "string",
                            "example": "User Name"
                          },
                          "email": {
                            "type": "string",
                            "example": "user@example.com"
                          },
                          "isFollowing": {
                            "type": "boolean",
                            "example": true
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "success",
                    "data"
                  ],
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Edit user details",
        "description": "Endpoint to edit the details of a user, with the option to update the avatar.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "fullname": {
                    "example": "any"
                  },
                  "bio": {
                    "example": "any"
                  },
                  "avatar": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/feed": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user feed",
        "description": "Endpoint to retrieve the feed for a user.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/trending": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get trending or active users",
        "description": "Endpoint to retrieve users based on engagement and activity or fallback to recently active users if no trending users are found.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/all": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get all users",
        "description": "Endpoint to retrieve all users from the database, excluding sensitive information.",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{username}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get specific user",
        "description": "Endpoint to retrieve a specific user by their username.",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Username of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{id}/follow": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Follow a user",
        "description": "Endpoint for the current user to follow another user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to follow"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/api/users/{id}/unfollow": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Unfollow a user",
        "description": "Endpoint for the current user to unfollow another user.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "ID of the user to unfollow"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header",
        "description": "Enter your JWT token as: Bearer <token>"
      }
    }
  }
}